@model psiconexao.Models.Usuario

@{
    ViewData["Title"] = "Cadastro";
}


<link rel="stylesheet" href="~/css/authCadastro.css" />

<div class="separator-2"></div>
<div>
    <div class="container container-content">
        <div class="section-header">
            <h2>Cadastre-se e faça parte da maior rede de cuidado e conexão!</h2>
            <div class="card-col-6">
                <span>
                    Bem-vindo(a) à plataforma que conecta psicólogos e pacientes de forma simples e segura. Ao se cadastrar, você está a um passo de criar uma rede de apoio emocional, seja oferecendo cuidado profissional ou recebendo o suporte que precisa. Junte-se a nós e comece a construir conexões que transformam vidas!
                </span>
                <div class="card-4">
                    <a href="#cadastrar" class="button">CADASTRE-SE</a>
                    <a asp-controller="Auth" asp-action="Login" class="button white-button transparent">Já tenho cadastro</a>
                </div>
            </div>
        </div>
        <image src="/images/psico.png"
               alt="Psicóloga"
               width="400px"
               class="hide-img" />
    </div>
</div>
<div class="container card-col-8" id="cadastrar">
    <div class="card-2">
        <image src="../images/arrow.svg"
               alt="Seta"
               width="24px"
               class="min-svg mb-2" />
        <h4>Cadastre-se e Conecte-se com Mais Pacientes!</h4>
    </div>
    <div class="card card-box separator">
        <form asp-action="Cadastro" class="card-wrap-8 container-content" id="register-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="card-col-2 register-form">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="input register-input" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="card-col-2 register-form">
                <label asp-for="Telefone" class="control-label"></label>
                <input asp-for="Telefone" class="input register-input" />
                <span asp-validation-for="Telefone" class="text-danger"></span>
            </div>
            <div class="card-col-2 register-form">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="input register-input" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="card-col-2 register-form">
                <label for="confirmarEmail">Confirmar e-mail</label>
                <input type="email" id="confirmarEmail" name="confirmarEmail" class="input register-input" required />
            </div>
            <div class="card-col-2 register-form position-relative">
                <label asp-for="Password" class="control-label">Senha</label>
                <span id="password-requirements-span">Sua senha deve conter ao menos 8 caracteres, um número e uma letra maiúscula.</span>
                <input asp-for="Password"
                    type="password"
                    class="input register-input"
                    id="inputPassword" />
                <img src="~/images/eyes-closed1.svg"
                     alt="Ícone de visualização"
                     width="20px"
                     class="lock-button position-absolute"
                     id="trocarVisualizacao"
                     style="bottom: 23px; right: 20px; transform: translateY(-50%); cursor: pointer;" />
                <span asp-validation-for="Password" class="text-danger"></span>
                <div id="password-strength-container">
                    <div id="password-weak" class="password-strength-items"></div>
                    <div id="password-medium" class="password-strength-items"></div>
                    <div id="password-strong" class="password-strength-items"></div>
                </div>
            </div>
            <div class="card-col-2 register-form position-relative">
                <label for="confirmarSenha">Confirmar senha</label>
                <input type="password"
                    id="inputPasswordConf"
                    name="confirmarSenha"
                    class="input register-input" />
                <img src="~/images/eyes-closed1.svg"
                     alt="Ícone de visualização"
                     width="20px"
                     class="lock-button position-absolute"
                     id="trocarVisualizacaoConf"
                     style="bottom: 23px; right: 20px; transform: translateY(-50%); cursor: pointer;" />
                <span asp-validation-for="Password" class="text-danger"></span>
                <div id="password-strength-container">
                    <div id="password-weak-conf" class="password-strength-items"></div>
                    <div id="password-medium-conf" class="password-strength-items"></div>
                    <div id="password-strong-conf" class="password-strength-items"></div>
                </div>
                 </div>
            <div class="card-col-2 register-form">
                <label asp-for="Perfil" class="control-label"></label>
                <select asp-for="Perfil" class="input register-input" asp-items="@(new SelectList(Enum.GetValues(typeof(Perfil))))">
                    <option value="">Selecione um perfil</option>
                </select>
                <span asp-validation-for="Perfil" class="text-danger"></span>
            </div>
            <div class="card-col-2 register-form">
                <input type="submit" class="button register-button" value="CADASTRE-SE" />
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <link rel="stylesheet" href="~/css/senha.css">
}

<script>
    const trocarVisualizacao = document.querySelector('#trocarVisualizacao');
    const inputPassword = document.querySelector('#inputPassword');
    const trocarVisualizacaoConf = document.querySelector('#trocarVisualizacaoConf');
    const inputPasswordConf = document.querySelector('#inputPasswordConf');

    trocarVisualizacao.addEventListener('click', () => {

        if (inputPassword.getAttribute('type') === 'password') {
            inputPassword.setAttribute('type', 'text')
            trocarVisualizacao.src = '@Url.Content("~/images/eye-open1.svg")';

        } else if (inputPassword.getAttribute('type') === 'text') {
            inputPassword.setAttribute('type', 'password')
            trocarVisualizacao.src = '@Url.Content("~/images/eyes-closed1.svg")';
        }
    });

    trocarVisualizacaoConf.addEventListener('click', () => {

        if (inputPasswordConf.getAttribute('type') === 'password') {
            inputPasswordConf.setAttribute('type', 'text')
            trocarVisualizacaoConf.src = '@Url.Content("~/images/eye-open1.svg")';

        } else if (inputPasswordConf.getAttribute('type') === 'text') {
            inputPasswordConf.setAttribute('type', 'password')
            trocarVisualizacaoConf.src = '@Url.Content("~/images/eyes-closed1.svg")';
        }
    });

    // validação de senha
    const weak = document.querySelector("#password-weak");
    const medium = document.querySelector("#password-medium");
    const strong = document.querySelector("#password-strong");
    const weakConf = document.querySelector("#password-weak-conf");
    const mediumConf = document.querySelector("#password-medium-conf");
    const strongConf = document.querySelector("#password-strong-conf");
    const registerForm = document.querySelector("#register-form");
    const passwordRequirementsSpan = document.querySelector("#password-requirements-span")

    inputPassword.addEventListener("input", (e) => {
      let strength = verifyPassword(e.target.value);

      if (strength === 0) {
        weak.classList.remove("active");
        medium.classList.remove("active");
        strong.classList.remove("active");
      } else if (strength === 1) {
        weak.classList.add("active");
        medium.classList.remove("active");
        strong.classList.remove("active");
      } else if (strength === 2) {
        medium.classList.add("active");
        strong.classList.remove("active");
      } else if (strength === 3) {
        strong.classList.add("active");
      }
    });

    inputPasswordConf.addEventListener("input", (e) => {
        let strength = verifyPassword(e.target.value);

      if (strength === 0) {
        weakConf.classList.remove("active");
        mediumConf.classList.remove("active");
        strongConf.classList.remove("active")
      } else if (strength === 1) {
        weakConf.classList.add("active");
        mediumConf.classList.remove("active");
        strongConf.classList.remove("active");
      } else if (strength === 2) {
        mediumConf.classList.add("active");
        strongConf.classList.remove("active");
      } else if (strength === 3) {
        strongConf.classList.add("active");
      }
    })
    

    function verifyPassword(password) {
      let strength = 0;
      let numberRegex = /\d/;
      let upperCaseRegex = /[A-Z]/;
      if (password.length >= 8) {
        strength++;
      }
      if (numberRegex.test(password)) {
        strength++;
      }
      if (upperCaseRegex.test(password)) {
        strength++;
      }
      return strength;
    }

    registerForm.addEventListener("submit", (e) => {
        if(verifyPassword(inputPassword.value) < 3){
            e.preventDefault();
            passwordRequirementsSpan.style.display = "block";
        }
    });

</script>